name: Build V8 Static Library

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    name: ${{ matrix.config.name }}_${{ matrix.config.architecture }}_${{ matrix.config.build_type }}
    if: "!startsWith(github.event.head_commit.message, '[Skip]')"
    runs-on: windows-latest
    strategy:
      matrix:
        config:
          - name: windows
            architecture: x64
            library_name: v8_monolith.lib
            build_type: release
          - name: windows
            architecture: x64
            library_name: v8_monolith.lib
            build_type: debug

    env:
      DEPOT_TOOLS_WIN_TOOLCHAIN: 0

    steps:
      - name: Install Git LFS
        run: git lfs install

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install MSVC/MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Get Target V8 Version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./V8_VERSION

      - name: Install Depot Tools
        run: |
          Invoke-WebRequest -Uri "https://storage.googleapis.com/chrome-infra/depot_tools.zip" -OutFile depot_tools.zip
          Expand-Archive -Path depot_tools.zip -DestinationPath depot_tools
          Remove-Item depot_tools.zip
          echo "$pwd\depot_tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Checkout V8 Source Code
        run: |
          fetch v8
          cd v8
          git checkout ${{ steps.version.outputs.content }}
          gclient sync

      - name: Build V8
        shell: pwsh
        run: |
          Set-Location -Path v8

          # Detect VS 2022 and override toolchain
          $vsPath = Get-ChildItem "C:\Program Files\Microsoft Visual Studio\2022" | Select-Object -First 1 | ForEach-Object { $_.FullName }
          $env:GYP_MSVS_OVERRIDE_PATH = $vsPath
          $env:GYP_MSVS_VERSION = "17.0"

          # Patch vs_toolchain.py to support VS 2022
          (Get-Content "build/vs_toolchain.py") -replace "MSVS_VERSIONS = collections.OrderedDict\(\[", "MSVS_VERSIONS = collections.OrderedDict([`n    ('17.0', 'Visual Studio 2022')," | Set-Content "build/vs_toolchain.py"

          # Prepare build directory and args.gn
          $buildType = "${{ matrix.config.build_type }}"
          $outDir = "out.gn/x64.$buildType"
          New-Item -ItemType Directory -Path $outDir -Force
          Copy-Item "../platforms/windows_x64/args.$buildType.gn" -Destination "$outDir/args.gn" -Force

          # Generate and build
          gn gen $outDir
          ninja -C $outDir

      - name: Prepare Artifact Directory
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path ./artifact/ -Force
          Copy-Item -Path ./v8/include -Recurse -Filter *.h -Destination ./artifact/include -Container
          Copy-Item -Path ./v8/out.gn/x64.${{ matrix.config.build_type }}/obj/${{ matrix.config.library_name }} -Destination ./artifact/${{ matrix.config.name }}_${{ matrix.config.architecture }}_${{ matrix.config.build_type }}_${{ matrix.config.library_name }}

      - name: Upload Headers & Monolithic Lib
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.name }}_${{ matrix.config.architecture }}_${{ matrix.config.build_type }}_v8_monolith
          path: artifact/

      - name: Publish Compiled Libraries
        if: startsWith(github.event.head_commit.message, '[Release]') && github.ref == 'refs/heads/master'
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: V8 ${{ steps.version.outputs.content }}
          tag_name: v${{ steps.version.outputs.content }}
          files: |
            artifact/${{ matrix.config.name }}_${{ matrix.config.architecture }}_${{ matrix.config.build_type }}_${{ matrix.config.library_name }}
