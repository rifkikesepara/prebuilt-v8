name: Build V8 Static Library

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    name: ${{ matrix.config.name }}_${{ matrix.config.architecture }}_${{ matrix.config.build_type }}
    if: "!startsWith(github.event.head_commit.message, '[Skip]')"
    runs-on: windows-latest
    strategy:
      matrix:
        config:
          - name: windows
            architecture: x64
            library_name: v8_monolith.lib
            build_type: release
          - name: windows
            architecture: x64
            library_name: v8_monolith.lib
            build_type: debug

    env:
      DEPOT_TOOLS_WIN_TOOLCHAIN: 0

    steps:
      - name: Install Git LFS
        run: git lfs install

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install MSVC/MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Get Target V8 Version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./V8_VERSION

      - name: Install Depot Tools
        run: |
          Invoke-WebRequest -Uri "https://storage.googleapis.com/chrome-infra/depot_tools.zip" -OutFile depot_tools.zip
          Expand-Archive -Path depot_tools.zip -DestinationPath depot_tools
          Remove-Item depot_tools.zip
          echo "$pwd\depot_tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Checkout V8 Source Code
        run: |
          fetch v8
          cd v8
          git checkout ${{ steps.version.outputs.content }}
          gclient sync

      - name: Build V8
        shell: pwsh
        run: |
          Set-Location -Path v8

          # Detect VS 2022 path and override toolchain
          $vsPath = Get-ChildItem "C:\Program Files\Microsoft Visual Studio\2022" | Select-Object -First 1 | ForEach-Object { $_.FullName }
          $env:GYP_MSVS_OVERRIDE_PATH = $vsPath
          $env:GYP_MSVS_VERSION = "2022"

          # Patch vs_toolchain.py to support VS 2022
          (Get-Content "build/vs_toolchain.py") -replace "MSVS_VERSIONS = collections
